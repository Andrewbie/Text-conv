{"ast":null,"code":"var _jsxFileName = \"D:\\\\ract learn\\\\learning\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForms from './components/TextForms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (msg, Type) => {\n    setAlert({\n      message: msg,\n      Type: Type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      newMode(\"dark\");\n      newTxtCol(\"light\");\n      document.body.style.background = '#56585d';\n    } else {\n      newMode(\"light\");\n      newTxtCol(\"dark\");\n      document.body.style.background = 'white';\n    }\n  };\n  const [txtCol, newTxtCol] = useState(\"dark\");\n  const [mode, newMode] = useState('light');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text-Conv\",\n      nav2: \"about textUtils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      txtCol: txtCol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      mode: mode,\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TextForms, {\n      heading: \"Enter your Text to perform analyzation\",\n      mode: mode,\n      txtCol: txtCol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Q9B5QbcVYWlgwx/Kzw9nXmuoFyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","Navbar","Alert","TextForms","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alert","setAlert","showAlert","msg","Type","message","toggleMode","mode","newMode","newTxtCol","document","body","style","background","txtCol","children","title","nav2","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["D:/ract learn/learning/my-app/src/App.js"],"sourcesContent":["import React,{useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForms from './components/TextForms';\n\nfunction App() {\n\n  const [alert,setAlert] = useState(null)\n\n  const showAlert = (msg,Type)=>{\n    setAlert({\n      message: msg,\n      Type : Type\n    })\n  }\n\n  const toggleMode = ()=>{\n    if(mode===\"light\"){\n      newMode(\"dark\")\n      newTxtCol(\"light\")\n      document.body.style.background = '#56585d'\n    }\n    else{\n      newMode(\"light\")\n      newTxtCol(\"dark\")\n      document.body.style.background = 'white'\n    }\n  }\n\n  const [txtCol,newTxtCol] = useState(\"dark\")\n\n  const [mode,newMode]=useState('light')\n  return (\n    <>\n    \n    <Navbar title=\"Text-Conv\" nav2=\"about textUtils\" mode={mode} toggleMode={toggleMode} txtCol={txtCol}/>\n    <Alert mode={mode} alert={alert}/>\n    <TextForms heading=\"Enter your Text to perform analyzation\" mode={mode} txtCol={txtCol}/>\n    {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMa,SAAS,GAAGA,CAACC,GAAG,EAACC,IAAI,KAAG;IAC5BH,QAAQ,CAAC;MACPI,OAAO,EAAEF,GAAG;MACZC,IAAI,EAAGA;IACT,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGC,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACfC,SAAS,CAAC,OAAO,CAAC;MAClBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,SAAS;IAC5C,CAAC,MACG;MACFL,OAAO,CAAC,OAAO,CAAC;MAChBC,SAAS,CAAC,MAAM,CAAC;MACjBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAG,OAAO;IAC1C;EACF,CAAC;EAED,MAAM,CAACC,MAAM,EAACL,SAAS,CAAC,GAAGpB,QAAQ,CAAC,MAAM,CAAC;EAE3C,MAAM,CAACkB,IAAI,EAACC,OAAO,CAAC,GAACnB,QAAQ,CAAC,OAAO,CAAC;EACtC,oBACEM,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBAEApB,OAAA,CAACJ,MAAM;MAACyB,KAAK,EAAC,WAAW;MAACC,IAAI,EAAC,iBAAiB;MAACV,IAAI,EAAEA,IAAK;MAACD,UAAU,EAAEA,UAAW;MAACQ,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtG1B,OAAA,CAACH,KAAK;MAACe,IAAI,EAAEA,IAAK;MAACP,KAAK,EAAEA;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClC1B,OAAA,CAACF,SAAS;MAAC6B,OAAO,EAAC,wCAAwC;MAACf,IAAI,EAAEA,IAAK;MAACO,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEvF,CAAC;AAEP;AAACtB,EAAA,CApCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}