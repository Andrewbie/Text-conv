{"ast":null,"code":"var _jsxFileName = \"D:\\\\ract learn\\\\learning\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport TextForms from './components/TextForms';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (msg, Type) => {\n    setAlert({\n      msg: msg,\n      type: Type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      newMode(\"dark\");\n      newTxtCol(\"light\");\n      document.body.style.background = '#56585d';\n      showAlert(\"Dark Mode Enabled\", \"success\");\n    } else {\n      newMode(\"light\");\n      newTxtCol(\"dark\");\n      document.body.style.background = 'white';\n      showAlert(\"light Mode Enabled\", \"success\");\n    }\n  };\n  const [txtCol, newTxtCol] = useState(\"dark\");\n  const [mode, newMode] = useState('light');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text-Conv\",\n      nav2: \"about textUtils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      txtCol: txtCol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      mode: mode,\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(TextForms, {\n          heading: \"Enter your Text to perform analyzation\",\n          mode: mode,\n          txtCol: txtCol,\n          showAlert: showAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Q9B5QbcVYWlgwx/Kzw9nXmuoFyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","logo","Navbar","Alert","About","TextForms","BrowserRouter","Router","Routes","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","alert","setAlert","showAlert","msg","Type","type","setTimeout","toggleMode","mode","newMode","newTxtCol","document","body","style","background","txtCol","children","title","nav2","fileName","_jsxFileName","lineNumber","columnNumber","path","heading","_c","$RefreshReg$"],"sources":["D:/ract learn/learning/my-app/src/App.js"],"sourcesContent":["import React,{useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport TextForms from './components/TextForms';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\n\nfunction App() {\n\n  const [alert,setAlert] = useState(null)\n\n  const showAlert = (msg,Type)=>{\n    setAlert({\n      msg : msg,\n      type : Type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode===\"light\"){\n      newMode(\"dark\")\n      newTxtCol(\"light\")\n      document.body.style.background = '#56585d'\n      showAlert(\n        \"Dark Mode Enabled\",\"success\"\n      )\n    }\n    else{\n      newMode(\"light\")\n      newTxtCol(\"dark\")\n      document.body.style.background = 'white'\n      showAlert(\n        \"light Mode Enabled\",\"success\"\n      )\n    }\n  }\n\n  const [txtCol,newTxtCol] = useState(\"dark\")\n\n  const [mode,newMode]=useState('light')\n  return (\n    \n    <>\n    \n    <Navbar title=\"Text-Conv\" nav2=\"about textUtils\" mode={mode} toggleMode={toggleMode} txtCol={txtCol}/>\n    <Alert mode={mode} alert={alert}/>\n\n    <Routes>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n          <Route path=\"/\">\n    <TextForms heading=\"Enter your Text to perform analyzation\" mode={mode} txtCol={txtCol} showAlert={showAlert}/>\n            \n          </Route>\n    </Routes>\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}