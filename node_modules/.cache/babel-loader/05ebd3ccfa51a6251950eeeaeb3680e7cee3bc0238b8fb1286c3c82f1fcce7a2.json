{"ast":null,"code":"import React,{useState}from'react';import'./App.css';import Navbar from'./components/Navbar';import Alert from'./components/Alert';import About from'./components/About';import TextForms from'./components/TextForms';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[alert,setAlert]=useState(null);const showAlert=(msg,Type)=>{setAlert({msg:msg,type:Type});setTimeout(()=>{setAlert(null);},2000);};const toggleMode=()=>{if(mode===\"light\"){newMode(\"dark\");newTxtCol(\"light\");document.body.style.background='#56585d';showAlert(\"Dark Mode Enabled\",\"success\");}else{newMode(\"light\");newTxtCol(\"dark\");document.body.style.background='white';showAlert(\"light Mode Enabled\",\"success\");}};const[txtCol,newTxtCol]=useState(\"dark\");const[mode,newMode]=useState('light');return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Text-Conv\",nav2:\"about text-conv\",mode:mode,toggleMode:toggleMode,txtCol:txtCol}),/*#__PURE__*/_jsx(Alert,{mode:mode,alert:alert}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextForms,{heading:\"Enter your Text to perform analyzation\",mode:mode,txtCol:txtCol,showAlert:showAlert})}),/*#__PURE__*/_jsx(Route,{path:\"about\",element:/*#__PURE__*/_jsx(About,{mode:mode,txtCol:txtCol})})]})]})});}export default App;","map":{"version":3,"names":["React","useState","Navbar","Alert","About","TextForms","BrowserRouter","Router","Routes","Route","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","alert","setAlert","showAlert","msg","Type","type","setTimeout","toggleMode","mode","newMode","newTxtCol","document","body","style","background","txtCol","children","title","nav2","path","element","heading"],"sources":["D:/ract learn/learning/my-app/src/App.js"],"sourcesContent":["import React,{useState} from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport TextForms from './components/TextForms';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\n\nfunction App() {\n\n  const [alert,setAlert] = useState(null)\n\n  const showAlert = (msg,Type)=>{\n    setAlert({\n      msg : msg,\n      type : Type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode===\"light\"){\n      newMode(\"dark\")\n      newTxtCol(\"light\")\n      document.body.style.background = '#56585d'\n      showAlert(\n        \"Dark Mode Enabled\",\"success\"\n      )\n    }\n    else{\n      newMode(\"light\")\n      newTxtCol(\"dark\")\n      document.body.style.background = 'white'\n      showAlert(\n        \"light Mode Enabled\",\"success\"\n      )\n    }\n  }\n\n  const [txtCol,newTxtCol] = useState(\"dark\")\n\n  const [mode,newMode]=useState('light')\n  return (\n    \n    <>\n    <Router>\n    <Navbar title=\"Text-Conv\" nav2=\"about text-conv\" mode={mode} toggleMode={toggleMode} txtCol={txtCol}/>\n    <Alert mode={mode} alert={alert}/>\n\n    <Routes>\n  <Route path=\"/\" element={<TextForms heading=\"Enter your Text to perform analyzation\" mode={mode} txtCol={txtCol} showAlert={showAlert}/>}>\n    {/* <Route path=\"tasks\" element={<DashboardTasks />} /> */}\n  </Route>\n  <Route path=\"about\" element={<About mode={mode} txtCol={txtCol}/>} />\n</Routes>\n           \n</Router>   \n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAEC,QAAQ,KAAO,OAAO,CACpC,MAAO,WAAW,CAClB,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEzE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb,KAAM,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAEvC,KAAM,CAAAkB,SAAS,CAAGA,CAACC,GAAG,CAACC,IAAI,GAAG,CAC5BH,QAAQ,CAAC,CACPE,GAAG,CAAGA,GAAG,CACTE,IAAI,CAAGD,IACT,CAAC,CAAC,CAEFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAM,UAAU,CAAGA,CAAA,GAAI,CACrB,GAAGC,IAAI,GAAG,OAAO,CAAC,CAChBC,OAAO,CAAC,MAAM,CAAC,CACfC,SAAS,CAAC,OAAO,CAAC,CAClBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,CAAG,SAAS,CAC1CZ,SAAS,CACP,mBAAmB,CAAC,SACtB,CAAC,CACH,CAAC,IACG,CACFO,OAAO,CAAC,OAAO,CAAC,CAChBC,SAAS,CAAC,MAAM,CAAC,CACjBC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,CAAG,OAAO,CACxCZ,SAAS,CACP,oBAAoB,CAAC,SACvB,CAAC,CACH,CACF,CAAC,CAED,KAAM,CAACa,MAAM,CAACL,SAAS,CAAC,CAAG1B,QAAQ,CAAC,MAAM,CAAC,CAE3C,KAAM,CAACwB,IAAI,CAACC,OAAO,CAAC,CAACzB,QAAQ,CAAC,OAAO,CAAC,CACtC,mBAEEU,IAAA,CAAAI,SAAA,EAAAkB,QAAA,cACApB,KAAA,CAACN,MAAM,EAAA0B,QAAA,eACPtB,IAAA,CAACT,MAAM,EAACgC,KAAK,CAAC,WAAW,CAACC,IAAI,CAAC,iBAAiB,CAACV,IAAI,CAAEA,IAAK,CAACD,UAAU,CAAEA,UAAW,CAACQ,MAAM,CAAEA,MAAO,CAAC,CAAC,cACtGrB,IAAA,CAACR,KAAK,EAACsB,IAAI,CAAEA,IAAK,CAACR,KAAK,CAAEA,KAAM,CAAC,CAAC,cAElCJ,KAAA,CAACL,MAAM,EAAAyB,QAAA,eACTtB,IAAA,CAACF,KAAK,EAAC2B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAE1B,IAAA,CAACN,SAAS,EAACiC,OAAO,CAAC,wCAAwC,CAACb,IAAI,CAAEA,IAAK,CAACO,MAAM,CAAEA,MAAO,CAACb,SAAS,CAAEA,SAAU,CAAC,CAAE,CAElI,CAAC,cACRR,IAAA,CAACF,KAAK,EAAC2B,IAAI,CAAC,OAAO,CAACC,OAAO,cAAE1B,IAAA,CAACP,KAAK,EAACqB,IAAI,CAAEA,IAAK,CAACO,MAAM,CAAEA,MAAO,CAAC,CAAE,CAAE,CAAC,EAC/D,CAAC,EAED,CAAC,CACH,CAAC,CAGP,CAEA,cAAe,CAAAhB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}